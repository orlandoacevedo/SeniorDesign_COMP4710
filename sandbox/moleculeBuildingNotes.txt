Ethane\
c1
0,0,0

c2
	1. move 1.53136 angstroms along z axis
	2. 0,0,1.53136

h1
	1. move 1.090375 in y direction
	2. 0,1.090375,1.53136
	3. c2 is common atom between c1 and h1
	4. plane is generated by c1, c2, h1
 	5. rotate 21.03971 degrees about the normal of c2, c1, h1
	6. maintains the correct plane
h2
	1. steps 1 - 6 of h1
	2. rotate plane generated by c2, c1, h2 so that it creates a 240 degree angle with plane defined by c2, c1, h1

h3
	1. steps 1 - 6 of h1
	2. rotate plane generated by c2, c1, h3 so that it creates a 120 degree angle with plane defined by c2, c1, h1

repeat for hydrogens
...

The idea behind this molecule is to cycle through the atoms, angles, and dihedrals
in a similar fashion to how they are defined in the z-matrix file
void buildMolecule(Molecule *m){
	atom1 = m->atoms[0]
	atom1.position = 0,0,0 // this atoms position will not change
	bonds = all bonds associated with atom1
        
        bool finished = false;
        vector<int> processAtoms;        

        int currentAtomIndex = 1  // the second atom in the molecule z-matrix file.
        int currentBondIndex = 0
        int currentAngleIndex = 0
        int currentDihedralIndex = 0
        while(!finished){
            Atom currentAtom = m->atom[currentAtomIndex]
            // check if currentAtom is in currentBond
                // yes: move atom based on the bond
                // increment currentBondIndex 
            // check if currentAtom is in currentAngle
                //yes: find common atom in angle
                       find common atom between the two atoms in angle
                       rotate currentAtom about the common atom away from the other atom.  must maintain plane
                increment currentAngleIndex
                       
            // check if currentAtom is in currentDihedral
                yes: 

        }
}
